/*Apparently this sort of problem is really relavent to Ruby or Python because they can handle
big integers with a specific function. This will work for any number below 22, but then it turns into 
a shortened exponent expression. */
/*
n! means n × (n − 1) × ... × 3 × 2 × 1
For example, 10! = 10 × 9 × ... × 3 × 2 × 1 = 3628800,
and the sum of the digits in the number 10! is 3 + 6 + 2 + 8 + 8 + 0 + 0 = 27.
Find the sum of the digits in the number 100!
*/

function factorialSum(num){
    var factorial =1;
    var digitSum=0;
    for(i=num; i>=1; i--){
        factorial*=i;
    }
      var digits = factorial.toString().split("");
        for(var i=0; i<digits.length; i++){
            digitSum+= +(digits[i]);
        }
         return digitSum;
}
factorialSum();
